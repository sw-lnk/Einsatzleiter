
services:
  django:
    container_name: einsatzleiter-django
    restart: unless-stopped
    build:
      context: ./Einsatzleiter
      network: host
    command: gunicorn server.wsgi:application --bind 0.0.0.0:8080
    volumes:
      - ./Einsatzleiter:/usr/src/app/
      - static_volume:/usr/src/app/staticfiles/
      - media_volume:/usr/src/app/mediafiles/
    expose:
      - 8080
    env_file:
      - .env
    depends_on:
      - db
    networks:
      - einsatzleiter-network
    labels:
      ofelia.enabled: "true"
      ofelia.job-exec.check-new-mission.schedule: "@every 30s"
      ofelia.job-exec.check-new-mission.command: "python scripts/mission.py"
    dns:
      - 185.150.99.255
      - 5.1.66.255

  db:
    image: postgres:alpine
    restart: unless-stopped
    container_name: einsatzleiter-postgres
    ports:
      - 5432:5432
    networks:
      - einsatzleiter-network
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - .env
    

  nginx:
    build: ./Einsatzleiter/nginx
    restart: unless-stopped
    container_name: einsatzleiter-nginx
    volumes:
      - static_volume:/usr/src/app/staticfiles/
      - media_volume:/usr/src/app/mediafiles/
    ports:
      - 1337:80
    depends_on:
      - django
    networks:
      - einsatzleiter-network

  ofelia:
    # https://github.com/mcuadros/ofelia?tab=readme-ov-file
    image: mcuadros/ofelia:latest
    restart: unless-stopped
    container_name: einsatzleiter-ofelia
    command: daemon --docker
    networks:
      - einsatzleiter-network
    depends_on:
      - django
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    labels:
      ofelia.job-local.django.schedule: "@every 60s"
      ofelia.job-local.django.command: "date"

volumes:
  postgres_data:
  static_volume:
  media_volume:

networks:
  einsatzleiter-network:
    name: einsatzleiter-network
    driver: bridge
